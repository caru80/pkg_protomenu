/*
	Protomenu
	Carsten Ruppert - 2019-04-24

	„Quicknav”
*/
.ptmenu{
	font-size: 1rem;
	text-align: left;
	user-select: none;
}

.ptmenu .nav-wrapper {
	position: relative;
	z-index: 120; // Optional erhöhen, falls ein anderes Stylesheet den z-index verseucht. Wenn das dann auch nicht klappt, musst du dein Stylesheet korrigieren.
}

.ptmenu .item {
	$link-color: (
		"normal" 	: #ffffff,
		"hover" 	: #ffffff,
		"active" 	: #444444
	);
	$link-bg-color: (
		"normal"	: transparent,
		"hover"		: $primary-light,
		"active" 	: $primary-light
	);

	font-size: 1em;
	
	.item-link,
	&.deeper > .item-heading 
	{
		display: flex;
		position: relative;

		padding: 0.6em 1em;
		background-color: map-get($link-bg-color, "normal");
		color: map-get($link-color, "normal");

		// !!!!!!!!! :
		align-items: center;
		height: 100%;
	}

	// Aktiver Menüeintrag und aktiver Parent
	&.parent.active,
	&.current.active
	{
		> .item-link,
		&.deeper > .item-heading 
		{
			background-color: map-get($link-bg-color, "active");
			color: map-get($link-color, "active");
		}
	}

	// Hover, geöffnet und angetippt
	&.open,
	//&:hover,
	&:active,
	//&.active:hover,
	&.active.open
	//&.active:active
	{
		> .item-link,
		&.deeper > .item-heading 
		{
			background-color: map-get($link-bg-color, "hover");
			color: map-get($link-color, "hover");
			text-decoration: none;
		}
	}
}



// Erste Ebene Container
.ptmenu .nav-first {
	display: flex; // Horizontales Menü
	justify-content: flex-end;
	flex-wrap: wrap;
}

// Untermenü-Container
.ptmenu .nav-child {
	background-color: $primary;
	min-width: 150px;
	min-height: 100%;
}




/* --------------------------------------------------------------------------------

	Submenus / Untermenüs Positionieren
	
	Hier sind keinerlei Änderungen nötig.

	<li data-ptm-item="ModulId-Itemid" class="item-Itemid deeper parent [current active]">
		<a|span|...>
		<div class="nav-child nav-level-N" data-ptm-child="ModulId-ItemId" data-ptm-level="N” [data-ptm-static-child]>

-------------------------------------------------------------------------------- */

// -- Untermenüs Positionieren – Verhalten „Dropdown”
[data-ptm-item].deeper:not(.mega) {

	// Untermenüs richten sich am <li> aus:
	position: relative;

	// Bug in Apple Safari – Alle nachfolgenden .item haben in Safari einen höheren z-Index als: [data-ptm-item].open > [data-ptm-child], so das bei einem 2-zeiligen Menü das Untermenü nicht erreicht werden kann.
	&.open {
		z-index: 2;
	}

	// Ab der 2. Menüebene – die Erste, die aufklappen kann – von Oben nach Unten ausrichten.
	> [data-ptm-child]:not([data-ptm-static-child]) 
	{
		position: absolute;
		top: 100%;
		left: 0;

		&.rtl {
			left: auto;
			right: 0;
		}
	}
	// Von Unten nach Oben (bottom-to-top: „btt”) ausrichten:
	&.btt > [data-ptm-child]:not([data-ptm-static-child]) 
	{
		top: auto;
		bottom: 100%;
	}


	// Ab der dritten Ebene von Links nach Rechts ausrichten:
	> [data-ptm-child] [data-ptm-child]:not([data-ptm-static-child]) 
	{
		top: 0;
		left: 100%;

		// Oder von Rechts nach Links (right-to-left: „rtl”) ausrichten:
		&.rtl {
			left: auto;
			right: 100%;
		}
	}


	// Von Unten nach Oben (bottom-to-top: „btt”) ausrichten:
	> [data-ptm-child] [data-ptm-item].deeper.btt > 
		[data-ptm-child]:not([data-ptm-static-child]) 
	{
		top: auto;
		bottom: 0;
	}
}

// -- Untermenüs Positionieren – Verhalten „Mega Menü”
[data-ptm-item].deeper.mega {

	// Durch die Position static an <li class="deeper mega ..."> richtet sich das .nav-child automatisch am nächst Höheren Element mit Position relative oder absolute aus. In diesem Fall ist das: div.nav-wrapper
	position: static;

	// Bug in Apple Safari – Alle nachfolgenden .item haben in Safari einen höheren z-Index als: [data-ptm-item].open > [data-ptm-child], so das bei einem 2-zeiligen Menü das Untermenü nicht erreicht werden kann.
	&.open ~ [data-ptm-item] {
		z-index: -1;
	}

	// ... Dies betrifft aber nur die nächste Kindebene, die von oben nach unten aufklappen soll.
	> [data-ptm-child]:not([data-ptm-static-child]) {
		position: absolute;
		z-index: 20;
		//top: 100%;
		left: 0;
	}

	// ... Ab der dritten Ebene soll wie gehabt von links nach Rechts aufgeklappt werden.
	> [data-ptm-child] [data-ptm-child]:not([data-ptm-static-child]) {
		top: 0;
		left: 100%;
	}
}



/* --------------------------------------------------------------------------------

	Submenus / Untermenüs Ein- und Ausblenden
	 
	Hier sind keinerlei Änderungen nötig, es sei denn der Einblendeeffekt soll geändert werden. 

	<li data-ptm-item="ModulId-Itemid" class="item-Itemid deeper parent [current active]">
		<a|span|...>
		<div class="nav-child nav-level-N" data-ptm-child="ModulId-ItemId" data-ptm-level="N" [data-ptm-static-child]>

-------------------------------------------------------------------------------- */

[data-ptm-item].deeper {
	//
	// Standard-Dropdown
	//
	> [data-ptm-child]:not([data-ptm-static-child]) 
	{
		visibility: hidden;
		opacity: 0;

		transform: scale3d(0.95,0.95,0.95);
		//transition-duration: 0s;
		transition-duration: 0.3s;
	}

	//
	// Mega-Dropdown
	// Hier soll kein Skalierungseffekt (scale3d) benutzt werden, weil das bei einem Element mit 100% Breite nicht gut aussieht.
	//
	&.mega > [data-ptm-child]:not([data-ptm-static-child]) 
	{
		transform: translateZ(0); // GPU Rendern...
	}

	//
	// Auslösen
	//
	> [data-ptm-child].open
	{
		z-index: 10;
		visibility: visible;
		opacity: 1;
	}

	// Offen, nicht Mega
	> [data-ptm-child].open
	{
		transform: 	scale3d(1,1,1);
		transition:	transform 0.2s cubic-bezier(.54,.39,0,1.02), 
					opacity 0.3s ease;
	}

	// Offen, Mega-Dropdown
	&.mega > [data-ptm-child].open
	{
		transition:	opacity 0.3s ease;
	}
}




/* --------------------------------------------------------------------------------

	Listen- und Grid-Fix
	 
	Das soll nicht bearbeitet werden! Es sei denn, du musst.
	 
-------------------------------------------------------------------------------- */

.ptmenu ul.nav-first,
.ptmenu ul.nav-sub {
	list-style-type: none;
	&, li{
		margin: 0; padding: 0;
	}
	&.row {
		margin: 0px ($grid-gutter-width / 2 * -1);
	}
}
.ptmenu ul.nav-first li[class*=col],
.ptmenu ul.nav-sub li[class*=col]{
	padding: 0px $grid-gutter-width / 2;
}