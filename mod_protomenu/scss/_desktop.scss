/*
	Protomenu
	Carsten Ruppert - 2019-04-24

	Desktop-Theme
*/
.ptmenu {
	font-size: 1rem;
	user-select: none; // Das markieren von Text im Menü verhindern
}

.ptmenu .nav-wrapper {
	position: relative;
	z-index: 110; // Optional erhöhen, falls ein anderes Stylesheet den z-index verseucht. Wenn das dann auch nicht klappt, musst du dein Stylesheet korrigieren.
}

//
// Ein Menü-Item
//
.ptmenu .item {
	$link-color: (
		"normal" 	: #333333,
		"hover" 	: #ffffff,
		"active" 	: #444444
	);
	$link-bg-color: (
		"normal"	: transparent,
		"hover"		: #559feb,
		"active" 	: #cdd5dc
	);

	font-size: 1em;
	
	.item-link,
	.item-heading 
	{
		display: flex;
		position: relative;
		padding: 0.6em 1em;
		background-color: map-get($link-bg-color, "normal");
		color: map-get($link-color, "normal");
	}

	// Aktiver Menüeintrag und aktiver Parent
	&.parent.active,
	&.current.active 
	{
		> .item-link,
		&.deeper > .item-heading 
		{
			background-color: map-get($link-bg-color, "active");
			color: map-get($link-color, "active");
		}
	}

	// Hover, geöffnet und angetippt
	&.open,
	&:hover,
	&:active,
	&.active:hover,
	&.active.open,
	&.active:active
	{
		> .item-link,
		&.deeper > .item-heading 
		{
			background-color: map-get($link-bg-color, "hover");
			color: map-get($link-color, "hover");
			text-decoration: none;
		}
	}
}


// Erste Ebene Container
.ptmenu .nav-first {
	display: flex; // Horizontales Menü
}

// Untermenü-Container
.ptmenu .nav-child {
	background-color: #efefef;
}

// Mega Untermenü-Container
.ptmenu .nav-child.mega {
	width: 100%;
	&.nav-level-2 > .nav-child-outer {
		padding-top: 30px;
		padding-bottom: 30px;
	}	
}


/*
	Deeper Anzeige (item kann aufgeklappt werden)

	<xy class="item deeper">
		<a class="nav-link">
			<span class="item-label">Label</span>
			<i class="item-deeper"></i> <------------------
		</a>
	</xy>
*/

//
// Modern mit Punkten
//
.ptmenu .item.deeper {
	> .item-link,
	> .item-heading {
		padding-right: 2.25em;
	}
}
.ptmenu .item {

	$bg-color: #333333; // Farbe Punkte
	$size: 		0.25em;	// Größe Punkte: 16px (1rem) * 0.25 = 4px

	.item-deeper {
		&,
		&::before,
		&::after {
			content: '';
			position: absolute;
			display: block;
			width: 0.25em;
			height: 0.25em;
			background-color: $bg-color;
			border-radius: 100%;
			transition: transform 0.2s cubic-bezier(.54,.39,0,1.02);
		}

		right: 1em;
		top: 50%;
		margin: ($size / 4 * -1) ($size / 4 * -1) 0 0;
	}

	&.open > .item-link .item-deeper,
	&.open > .item-heading .item-deeper
	{
		&::before,
		&::after {
			transform: translate3d(0, 0, 0);
		}
	}
}

// Ausrichtung Punkte 1. Menüebene
.ptmenu .nav-first .item {
	.item-deeper {
		&::before {
			transform: translate3d(0, -175%, 0);
		}
		&::after {
			transform: translate3d(0, 175%, 0);
		}
	}
}

// Ausrichtung Punkte ab 2. Menüebene
.ptmenu .nav-child .item {
	.item-deeper {
		&::before {
			transform: translate3d(-175%, 0, 0);
		}
		&::after {
			transform: translate3d(175%, 0, 0);
		}
	}
}


//
// Klassisch mit Pfeilen (FontAwesome)
//
/*
.ptmenu .item.deeper {
	.item-link,
	.item-heading {
		padding-right: 2.25em;
	}

	.item-deeper {
		position: absolute;
		right: 0;
		width: 2em;
		text-align: center;
	}

	&::before {
		@extend .fa;
	}
}

// 1. Ebene: Pfeil nach unten
.ptmenu .nav-first .item.deeper {
	.item-deeper::before {
		content: fa-content($fa-var-angle-down);
		transition: transform 0.15s ease;
	}
	&.open .item-deeper::before {
		transform: rotate3d(1, 0, 0, 180deg);
	}
}

// Ab 2. Ebene: Pfeil nach rechts 
.ptmenu .nav-child .item.deeper {
	.item-deeper::before {
		content: fa-content($fa-var-angle-right);
	}
	&.open .item-deeper::before {
		transform: rotate3d(0, 0, 1, 180deg);
	}
}
*/



/* --------------------------------------------------------------------------------

	Submenus / Untermenüs Positionieren
	
	Hier sind keinerlei Änderungen nötig.

	<li data-ptm-item="ModulId-Itemid" class="item-Itemid deeper parent [current active]">
		<a|span|...>
		<div class="nav-child nav-level-N" data-ptm-child="ModulId-ItemId" data-ptm-level="N” [data-ptm-static-child]>

-------------------------------------------------------------------------------- */

// -- Untermenüs Positionieren – Verhalten „Dropdown”
[data-ptm-item].deeper:not(.mega) {

	// Untermenüs richten sich am <li> aus:
	position: relative;

	// Ab der 2. Menüebene – die Erste, die aufklappen kann – von Oben nach Unten ausrichten.
	> [data-ptm-child]:not([data-ptm-static-child]) 
	{
		position: absolute;
		z-index: 2;
		top: 100%;
		left: 0;

		&.rtl {
			left: auto;
			right: 0;
		}
	}
	// Von Unten nach Oben (bottom-to-top: „btt”) ausrichten:
	&.btt > [data-ptm-child]:not([data-ptm-static-child]) 
	{
		top: auto;
		bottom: 100%;
	}


	// Ab der dritten Ebene von Links nach Rechts ausrichten:
	> [data-ptm-child] [data-ptm-child]:not([data-ptm-static-child]) 
	{
		top: 0;
		left: 100%;

		// Oder von Rechts nach Links (right-to-left: „rtl”) ausrichten:
		&.rtl {
			left: auto;
			right: 100%;
		}
	}


	// Von Unten nach Oben (bottom-to-top: „btt”) ausrichten:
	> [data-ptm-child] [data-ptm-item].deeper.btt > 
		[data-ptm-child]:not([data-ptm-static-child]) 
	{
		top: auto;
		bottom: 0;
	}
}

// -- Untermenüs Positionieren – Verhalten „Mega Menü”
[data-ptm-item].deeper.mega {

	// Durch die Position static an <li class="deeper mega ..."> richtet sich das .nav-child automatisch am nächst Höheren Element mit Position relative oder absolute aus. In diesem Fall ist das: div.nav-wrapper
	position: static;

	// ... Dies betrifft aber nur die nächste Kindebene, die von oben nach unten aufklappen soll.
	> [data-ptm-child]:not([data-ptm-static-child]) {
		position: absolute;
		z-index: 2;
		top: 100%;
		left: 0;
	}

	// ... Ab der dritten Ebene soll wie gehabt von links nach Rechts aufgeklappt werden.
	> [data-ptm-child] [data-ptm-child]:not([data-ptm-static-child]) {
		top: 0;
		left: 100%;
	}
}



/* --------------------------------------------------------------------------------

	Submenus / Untermenüs Ein- und Ausblenden
	 
	Hier sind keinerlei Änderungen nötig, es sei denn der Einblendeeffekt soll geändert werden. 

	<li data-ptm-item="ModulId-Itemid" class="item-Itemid deeper parent [current active]">
		<a|span|...>
		<div class="nav-child nav-level-N" data-ptm-child="ModulId-ItemId" data-ptm-level="N" [data-ptm-static-child]>

-------------------------------------------------------------------------------- */

[data-ptm-item].deeper {
	//
	// Standard-Dropdown
	//
	> [data-ptm-child]:not([data-ptm-static-child]) 
	{
		visibility: hidden;
		opacity: 0;

		transform: scale3d(0.95,0.95,0.95);
		transition-duration: 0s;
	}

	//
	// Mega-Dropdown
	// Hier soll kein Skalierungseffekt (scale3d) benutzt werden, weil das bei einem Element mit 100% Breite nicht gut aussieht.
	//
	&.mega > [data-ptm-child]:not([data-ptm-static-child]) 
	{
		transform: translateZ(0); // GPU Rendern...
	}

	//
	// Auslösen
	//
	> [data-ptm-child].open
	{
		z-index: 10;
		visibility: visible;
		opacity: 1;
	}

	// Offen, nicht Mega
	> [data-ptm-child].open
	{
		transform: 	scale3d(1,1,1);
		transition:	transform 0.2s cubic-bezier(.54,.39,0,1.02), 
					opacity 0.3s ease;
	}

	// Offen, Mega-Dropdown
	&.mega > [data-ptm-child].open
	{
		transition:	opacity 0.3s ease;
	}
}




/* --------------------------------------------------------------------------------

	Listen- und Grid-Fix
	 
	Das soll nicht bearbeitet werden! Es sei denn, du musst.
	 
-------------------------------------------------------------------------------- */

.ptmenu ul.nav-first,
.ptmenu ul.nav-sub {
	list-style-type: none;
	&, li{
		margin: 0; padding: 0;
	}
	&.row {
		margin: 0px ($grid-gutter-width / 2 * -1);
	}
}
.ptmenu ul.nav-first li[class*=col],
.ptmenu ul.nav-sub li[class*=col]{
	padding: 0px $grid-gutter-width / 2;
}

/* --------------------------------------------------------------------------------

	Protomenü in Protomenü
	 
-------------------------------------------------------------------------------- */
.ptmenu .ptmenu {
	display: none;
}
.ptmenu .open .ptmenu {
	display: block;
}
